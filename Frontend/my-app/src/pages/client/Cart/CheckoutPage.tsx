import { useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import Header from "../../../components/Navbar";
import Footer from "../../../components/Footer";

// M·∫´u list t·ªânh ‚Äì qu·∫≠n (b·∫°n n√™n c·∫≠p nh·∫≠t ƒë·∫ßy ƒë·ªß t·ª´ ngu·ªìn d·ªØ li·ªáu ri√™ng)
const provinces = ["H√† N·ªôi", "H·ªì Ch√≠ Minh", "ƒê√† N·∫µng"];
const districts: Record<string, string[]> = {
  "H√† N·ªôi": ["Ba ƒê√¨nh", "Ho√†n Ki·∫øm", "C·∫ßu Gi·∫•y"],
  "H·ªì Ch√≠ Minh": ["Qu·∫≠n 1", "Qu·∫≠n 3", "Qu·∫≠n 5"],
  "ƒê√† N·∫µng": ["H·∫£i Ch√¢u", "Thanh Kh√™"],
};

const paymentMethods = ["COD", "Chuy·ªÉn kho·∫£n ng√¢n h√†ng", "V√≠ ƒëi·ªán t·ª≠ (Momo/ZaloPay)"];

// Ki·ªÉu s·∫£n ph·∫©m
type Product = { id: string; name: string; quantity: number; price: number; };

const CheckoutPage = () => {
  const { state } = useLocation();
  const {
    selectedProducts = [],
    totalAmount = 0,
  }: { selectedProducts: Product[]; totalAmount: number } = state || {};
  const navigate = useNavigate();

  const [address, setAddress] = useState({
    province: "",
    district: "",
    street: ""
  });
  const [paymentMethod, setPaymentMethod] = useState("");

  // Th√¥ng tin MB Bank ‚Äì VietQR
  const mbAccount = "0686809012005";
  const mbBankCode = "970422";
  const qrTemplate = "compact";

  const handleOrder = async () => {
    if (!address.province || !address.district || !address.street || !paymentMethod) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }

    const user = JSON.parse(localStorage.getItem("user") || "{}");
    if (!user.id) {
      alert("Vui l√≤ng ƒëƒÉng nh·∫≠p!");
      navigate("/login");
      return;
    }

    const orderData = {
      userId: user.id,
      items: selectedProducts,
      totalAmount,
      address,
      paymentMethod,
      status: "Ch·ªù x·ª≠ l√Ω",
      createdAt: new Date().toISOString(),
    };

    try {
      const res = await fetch("http://localhost:3000/orders", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(orderData),
      });
      if (!res.ok) throw new Error("L·ªói server");
      alert("ƒê·∫∑t h√†ng th√†nh c√¥ng!");
      navigate("/orders");
    } catch {
      alert("X·∫£y ra l·ªói, th·ª≠ l·∫°i sau.");
    }
  };

  return (
    <>
      <Header />
      <div className="container my-5">
        <h2 className="fw-bold text-center">üõçÔ∏è Thanh to√°n</h2>
        <div className="row">
          {/* Danh s√°ch s·∫£n ph·∫©m */}
          <div className="col-lg-6">
            <h4 className="fw-bold">ƒê∆°n h√†ng</h4>
            {selectedProducts.map(item => (
              <div key={item.id} className="border-bottom py-2">
                <p>{item.name} x {item.quantity}</p>
                <p>{(item.price * item.quantity).toLocaleString()} VND</p>
              </div>
            ))}
            <h5 className="mt-3">
              T·ªïng: <span className="text-danger">{totalAmount.toLocaleString()} VND</span>
            </h5>
          </div>

          {/* Form th√¥ng tin */}
          <div className="col-lg-6">
            <h4 className="fw-bold">Th√¥ng tin giao h√†ng</h4>
            <select
              className="form-select my-2"
              value={address.province}
              onChange={e =>
                setAddress({ province: e.target.value, district: "", street: "" })
              }
            >
              <option value="">Ch·ªçn T·ªânh/Th√†nh</option>
              {provinces.map(p => (
                <option key={p} value={p}>{p}</option>
              ))}
            </select>
            <select
              className="form-select my-2"
              value={address.district}
              onChange={e =>
                setAddress({ ...address, district: e.target.value })
              }
              disabled={!address.province}
            >
              <option value="">Ch·ªçn Qu·∫≠n/Huy·ªán</option>
              {address.province && districts[address.province]?.map(d => (
                <option key={d} value={d}>{d}</option>
              ))}
            </select>
            <input
              type="text"
              className="form-control my-2"
              placeholder="S·ªë nh√†, ƒë∆∞·ªùng..."
              value={address.street}
              onChange={e => setAddress({ ...address, street: e.target.value })}
            />

            <h4 className="fw-bold mt-4">Ph∆∞∆°ng th·ª©c thanh to√°n</h4>
            <select
              className="form-select my-2"
              value={paymentMethod}
              onChange={e => setPaymentMethod(e.target.value)}
            >
              <option value="">Ch·ªçn</option>
              {paymentMethods.map(m => <option key={m} value={m}>{m}</option>)}
            </select>

            {paymentMethod === "Chuy·ªÉn kho·∫£n ng√¢n h√†ng" && (
              <div className="mt-4 text-center">
                <h5>QR chuy·ªÉn kho·∫£n MB Bank</h5>
                <img
                  src={`https://img.vietqr.io/image/${mbBankCode}-${mbAccount}-${qrTemplate}.png`}
                  alt="QR MB Bank"
                  style={{ width: 200, height: 200 }}
                />
                <p className="mt-3">
                  <b>S·ªë TK:</b> {mbAccount} <br />
                  <b>Ng√¢n h√†ng:</b> MB Bank <br />
                  <b>Ch·ªß TK:</b> L√ä KH·∫¢I HO√ÄN
                </p>
              </div>
            )}

            <button className="btn btn-success w-100 mt-3" onClick={handleOrder}>
              Ho√†n t·∫•t ƒë∆°n h√†ng
            </button>
          </div>
        </div>
      </div>
      <Footer />
    </>
  );
};

export default CheckoutPage;
